┌──(kali㉿kali)-[~/Desktop]
└─$ sqlmap -r data.txt --dbs 
        ___
       __H__                                                                                      
 ___ ___[(]_____ ___ ___  {1.6.4.4#dev}                                                           
|_ -| . [)]     | .'| . |                                                                         
|___|_  [(]_|_|_|__,|  _|                                                                         
      |_|V...       |_|   https://sqlmap.org                                                      

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 12:00:26 /2022-04-15/

[12:00:26] [INFO] parsing HTTP request from data.txt'
[12:00:27] [INFO] testing connection to the target URL
[12:00:27] [INFO] testing if the target URL content is stable
[12:00:28] [INFO] target URL content is stable
[12:00:28] [INFO] testing if GET parameter 'page' is dynamic
[12:00:28] [INFO] GET parameter 'page' appears to be dynamic
[12:00:29] [WARNING] heuristic (basic) test shows that GET parameter 'page' might not be injectable
[12:00:29] [INFO] heuristic (XSS) test shows that GET parameter 'page' might be vulnerable to cross-site scripting (XSS) attacks
[12:00:29] [INFO] heuristic (FI) test shows that GET parameter 'page' might be vulnerable to file inclusion (FI) attacks
[12:00:29] [INFO] testing for SQL injection on GET parameter 'page'
[12:00:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:00:30] [WARNING] reflective value(s) found and filtering out
[12:00:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:00:33] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                                                                
[12:00:33] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:00:34] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'                                                                                               
[12:00:35] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[12:00:35] [INFO] testing 'Generic inline queries'
[12:00:36] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:00:36] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[12:00:36] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[12:00:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:00:37] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:00:38] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[12:00:38] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[12:00:39] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:00:40] [WARNING] GET parameter 'page' does not seem to be injectable
[12:00:40] [INFO] testing if GET parameter 'username' is dynamic
[12:00:40] [WARNING] GET parameter 'username' does not appear to be dynamic
[12:00:40] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'PostgreSQL or MySQL')
[12:00:40] [INFO] heuristic (XSS) test shows that GET parameter 'username' might be vulnerable to cross-site scripting (XSS) attacks
[12:00:40] [INFO] testing for SQL injection on GET parameter 'username'
it looks like the back-end DBMS is 'PostgreSQL or MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'PostgreSQL or MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[12:00:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:00:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:00:42] [INFO] testing 'Generic inline queries'
[12:00:42] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:00:54] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:01:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:01:04] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:01:04] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:01:05] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                                                                   
[12:01:05] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:01:05] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:01:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:01:07] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:01:14] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:01:22] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:01:28] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:01:33] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:01:33] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:01:33] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:01:33] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:01:33] [INFO] testing 'PostgreSQL inline queries'
[12:01:34] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:01:36] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:01:40] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:01:43] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:01:47] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:01:49] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:01:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:01:58] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:02:03] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:02:12] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:02:10] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:02:16] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:02:21] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:02:24] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:02:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:02:28] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:02:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:02:28] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:02:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:02:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[12:02:47] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                                                            
[12:02:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                                                                   
[12:03:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                                                                    
[12:03:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                                                                        
[12:03:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                                                                         
[12:03:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                                                                   
[12:03:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                                                                    
[12:04:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[12:04:01] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                                                               
[12:04:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[12:04:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[12:04:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[12:04:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                                                               
[12:04:03] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:04:04] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                                                           
[12:04:04] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:04:04] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                                                            
[12:04:04] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[12:04:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[12:04:12] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                                                             
[12:04:18] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[12:04:24] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                                                                         
[12:04:31] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[12:04:38] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                                                                 
[12:04:44] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[12:04:51] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                                                                 
[12:04:57] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[12:05:03] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                       
[12:05:10] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                        
[12:05:17] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                                                                
[12:05:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                                                                 
[12:05:30] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                                                                   
[12:05:36] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                                                                    
[12:05:43] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                       
[12:05:49] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[12:05:55] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[12:05:59] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:12:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:12:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:12:03] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[12:12:03] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[12:12:04] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[12:12:04] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[12:12:04] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[12:12:04] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[12:12:04] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[12:12:05] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[12:12:05] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[12:12:05] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:12:05] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[12:12:05] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[12:12:12] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:12:12] [INFO] testing 'MySQL inline queries'
[12:12:12] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[12:12:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[12:12:13] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[12:12:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[12:12:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[12:12:22] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[12:12:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:12:32] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[12:12:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[12:12:43] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[12:12:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[12:12:52] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[12:12:56] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[12:12:59] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[12:07:03] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[12:07:09] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[12:07:15] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[12:07:20] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[12:07:25] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[12:07:29] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[12:07:33] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[12:07:36] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[12:07:40] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[12:07:46] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[12:07:49] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[12:07:55] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[12:07:58] [INFO] testing 'MySQL AND time-based blind (ELT)'
[12:08:04] [INFO] testing 'MySQL OR time-based blind (ELT)'
[12:08:09] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[12:08:13] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[12:08:17] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                                          
[12:08:21] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'                                                                                
[12:08:23] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[12:08:23] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[12:08:23] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[12:08:23] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'                                                                                             
[12:08:29] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[12:08:29] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[12:08:29] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[12:08:29] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[12:08:29] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[12:08:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:08:31] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[12:08:40] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[12:08:51] [WARNING] GET parameter 'username' does not seem to be injectable
[12:08:51] [INFO] testing if GET parameter 'password' is dynamic
[12:08:51] [WARNING] GET parameter 'password' does not appear to be dynamic
[12:08:52] [INFO] heuristic (basic) test shows that GET parameter 'password' might be injectable (possible DBMS: 'PostgreSQL or MySQL')
[12:08:52] [INFO] heuristic (XSS) test shows that GET parameter 'password' might be vulnerable to cross-site scripting (XSS) attacks
[12:08:52] [INFO] testing for SQL injection on GET parameter 'password'
[12:08:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:08:53] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:08:54] [INFO] testing 'Generic inline queries'
[12:08:54] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:09:12] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:09:15] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:09:15] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:09:15] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:09:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'                                                                                   
[12:09:16] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:09:17] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:09:17] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:09:17] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:09:25] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:09:32] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:09:39] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:09:44] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:09:44] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:09:44] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:09:44] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:09:44] [INFO] testing 'PostgreSQL inline queries'
[12:09:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:09:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:09:51] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:09:54] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:09:58] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:10:00] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:10:03] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:10:09] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:10:14] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:10:17] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:10:21] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:10:27] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:10:33] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:10:37] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:10:40] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:10:40] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:10:40] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:10:41] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:10:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:10:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:10:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[12:10:59] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'                                                                                            
[12:11:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                                                                   
[12:11:22] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'                                                                                    
[12:11:31] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                                                                        
[12:11:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'                                                                                         
[12:11:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                                                                   
[12:12:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'                                                                                    
[12:12:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[12:12:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'                                                                                               
[12:12:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[12:12:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[12:12:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[12:12:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'                                                                                               
[12:12:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:12:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                                                           
[12:12:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:12:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'                                                                                            
[12:12:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[12:12:22] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[12:12:22] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'                                                                             
[12:12:28] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[12:12:34] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'                                                                                         
[12:12:40] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[12:12:47] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'                                                                                 
[12:12:53] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[12:12:59] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'                                                                                 
[12:13:05] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[12:13:12] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                       
[12:13:18] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                        
[12:13:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                                                                
[12:13:30] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'                                                                                 
[12:13:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                                                                   
[12:13:43] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'                                                                                    
[12:13:49] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'                                                                                       
[12:13:56] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[12:14:02] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[12:14:05] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:14:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:14:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:14:09] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[12:14:10] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
